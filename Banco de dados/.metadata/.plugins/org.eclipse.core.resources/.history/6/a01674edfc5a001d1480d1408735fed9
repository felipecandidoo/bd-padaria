package conectaPg;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class ProdutoDAO {
	
	private Connection con;
	
	
	public ProdutoDAO() throws SQLException, ClassNotFoundException {
		
		con = Conecta.criarConexao();
	}

	public void cadastrarProduto(Produto prod) {

		String sql = "INSERT INTO produto (codigo, nomeP, categoria, estoque, preco) VALUES (?,?,?,?,?)";
	

		try { 

			PreparedStatement preparador = con.prepareStatement(sql);

			preparador.setInt(1, prod.getCodigo());

			preparador.setString(2, prod.getNomeP());
			
			preparador.setString(3, prod.getCategoria());

			preparador.setInt(4, prod.getEstoque());
			
			preparador.setDouble(5, prod.getPreco());			
			
			preparador.execute(); 

			preparador.close();
			
			System.out.println("Inserção realizada!"); 

			} catch (SQLException e) {

				System.out.println("Erro - " + e.getMessage());

			}

		}
		
	public void updateProduto(Produto prod) {

		String sql = "UPDATE produto SET estoque = ? WHERE codigo = ?";

		try {

		PreparedStatement preparador = con.prepareStatement(sql);

		preparador.setInt(1, prod.getEstoque());

		preparador.setInt(2, prod.getCodigo());

		preparador.execute();

		preparador.close();

		System.out.println("Alteração realizada!");

		} catch (SQLException e) {

		System.out.println("Erro - "+ e.getMessage());
		
	
}
	}
	
	public void deleteProduto (Produto prod) {

		String sql = "DELETE FROM produto WHERE codigo = ?";

		try {

		PreparedStatement preparador = con.prepareStatement(sql);

		preparador.setInt(1, prod.getCodigo());

		preparador.execute();

		preparador.close();

		System.out.println("Deleção realizada!");

		} catch (SQLException e) {

		System.out.println("Erro - "+ e.getMessage());

		}
		}
	
	public List<Produto> selectprodutos(){

		String sql = "SELECT * FROM funcionario";

		List<Funcionario> lista = new ArrayList()<Produto>();

		try {

		PreparedStatement preparador = con.prepareStatement(sql);

		ResultSet resultados = preparador.executeQuery();

		while (resultados.next()) {
			
			Funcionario prod2 = new Produto();

		func2.setMatricula(resultados.getInt("matricula"));

		func2.setNome(resultados.getString("nome"));

		func2.setEndereco(resultados.getString("endereco"));
		
		func2.setSexo(resultados.getString("sexo"));

		func2.setCargo(resultados.getString("cargo"));

		func2.setSalario(resultados.getDouble("salario"));


		lista.add(func2);

		} 

		} catch (SQLException e) {

		System.out.println("Erro - " + e.getMessage());

		}

		return lista; 

		} 
	
	
		
	

}
